apiVersion: v1 
kind: Pod
metadata:
  name: icinga2
spec:
  containers:
  - name: db-redis
    image:  docker.io/library/redis:alpine
    volumeMounts:
    - name: redis-vol
      mountPath: /data

  - name: sql
    image: docker.io/library/mariadb:lts-ubi
    env:
    - name: MARIADB_ROOT_PASSWORD
      value: "my-secret-pw"
    - name: MARIADB_AUTO_UPGRADE
      value: "1"
    - name: MARIADB_DISABLE_UPGRADE_BACKUP
      value: "1"
    volumeMounts:
    - name: sql-vol
      mountPath: /var/lib/mysql
    - name: sql-conf-vol
      mountPath: /docker-entrypoint-initdb.d/
      
  - name: web
    image: docker.io/library/nginx:stable-alpine-slim
    ports:
    - containerPort: 80
      hostPort: 8080
    volumeMounts:
    - name: web-conf-vol
      mountPath: /etc/nginx/conf.d/default.conf
      subPath: default.conf

  - name: web-php
    image: icinga/php

  - name: web-director
    image: icinga/php
    command: ["icingacli", "director", "daemon", "run"]

  - name: db
    image: icinga/db
      
  - name: master
    image:  icinga-2
    volumeMounts:
    - name: ssl-conf-vol
      mountPath: "/var/lib/icinga2/ca/ca.crt"
      subPath: ca.crt
    - name: ssl-conf-vol
      mountPath: "/var/lib/icinga2/ca/ca.key"
      subPath: ca.key
    - name: ssl-conf-vol
      mountPath: "/var/lib/icinga2/certs/"

  volumes:
  - name: sql-conf-vol
    configMap:
      name: sql-conf

  - name: ssl-conf-vol
    configMap:
      name: ssl-conf

  - name: web-conf-vol
    configMap:
      name: web-conf

  - name: sql-vol
    persistentVolumeClaim:
      claimName: sql-data

  - name: redis-vol
    persistentVolumeClaim:
      claimName: redis-data